server:
  port: 8083
logging:
  pattern:
    # 修改日志输出到控制台的格式
    # 默认格式为：%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
    #    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} ===> %msg%n'

    # 修改日志输出中的时间格式
    dateformat: yyyy-MM-dd HH:mm:ss.SSS

  # 修改组日志输出等级，默认有 root，web，sql
  level:
    root: info
    tomcat: warn
    custom: trace

  # 自定义日志分组
  group:
    tomcat: org.apache.catalina,org.apache.coyote,org.apache.tomcat
    custom: com.cozz.logging.controller

  # 日志输出到文件
  file:
    # 可以带路径，不带路径时文件生成在父项目的同级，路径文件夹不区分大小写
    name: log/springboot.log
    # 如果设置了name，文件路径以name为准，如果没有设置name，使用path路径，名称为spring.log
#    path: log/

  logback:
    # 日志归档与切割
    rollingpolicy:
      # 日志存档的文件名格式 默认：${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz）
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
      # 应用启动时是否清除以前存档，默认：false
      clean-history-on-start: false
      # 存档前，每个日志文件的最大大小，默认：10M
      max-file-size: 5KB
      # 日志文件被删除之前，可以容纳的最大大小，默认：0B，设置1GB则磁盘存储超过 1GB 日志后就会删除旧日志文件
      total-size-cap: 0B
      # 日志文件保存的最大天数，默认：7
      max-history: 7

# 通常我们配置 application.properties 就够了, 也可以通过配置文件自定义 logback-spring.xml。
# 最佳实战：自己要写配置，配置文件名加上 `xx-spring.xml`